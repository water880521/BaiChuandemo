<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="User">

	<!-- Use type aliases to avoid typing the full classname every time. -->
	<typeAlias alias="User" type="com.taobao.ybctest.entity.User" />

	<!-- Result maps describe the mapping between the columns returned
		from a query, and the class properties.  A result map isn't
		necessary if the columns (or aliases) match to the properties 
		exactly. -->
	<resultMap id="UserResult" class="User">
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="password" column="password" />
		<result property="description" column="description" />
	</resultMap>

	<!-- Select with no parameters using the result map for Account class. -->
	<select id="selectAllUsers" resultMap="UserResult">
		select * from Users
	</select>

	<!-- A simpler select example without the result map.  Note the 
		aliases to match the properties of the target result class. -->
	<select id="selectUserById" parameterClass="String"
		resultClass="User">
		select id as id, name as name, password as password, description
		as description from Users where id = #id#
	</select>

	<!-- Insert example, using the Account parameter class -->
	<insert id="insertUser" parameterClass="User">
		insert into Users (id,name, password,description) values ( #id#,
		#name#, #password#, #description#)
	</insert>

	<!-- Update example, using the Account parameter class -->
	<update id="updateAccount" parameterClass="User">
		update Users set name = #name#, password = #password#,
		description = #description# where id = #id#
	</update>

	<!-- Delete example, using an integer as the parameter class -->
	<delete id="deleteUserById" parameterClass="String">
		delete from Users where id = #id#
	</delete>

</sqlMap>